int dfs(TreeNode *A)
 {
     if(!A)
        return 0;
    int ans1=1,ans2=1;
    ans1+=dfs(A->left);
    ans2+=dfs(A->right);
    return max(ans1,ans2);
 }
int Solution::isBalanced(TreeNode* A) {
    if(!A)
        return 1;
    int a=dfs(A->left);
    int b=dfs(A->right);
    return abs(a-b)<=1 && isBalanced(A->left) && isBalanced(A->right);
}
